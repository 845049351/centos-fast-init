#!/bin/bash
#安装目录
tmpdir="~"
#创建安装目录
#mkdir -p $tmpdir

#安装ShadowSocks服务器
function ss_install {
 echo "start install ShadowSocks..\n"
 yum install python-setuptools && easy_install pip
 pip install shadowsocks
 echo "ShadowSocks has been installed successfully..\n"
}

#安装SoftEtherVPN服务器端
function vpn_server_install {
 echo "start install SoftEtherVPN-Server..\n"
 cd $tmpdir
 yum -y install gcc
 wget http://www.softether-download.com/files/softether/v4.19-9582-beta-2015.10.06-tree/Linux/SoftEther_VPN_Server/32bit_-_Intel_x86/softether-vpnserver-v4.19-9582-beta-2015.10.06-linux-x86-32bit.tar.gz
 tar -zxvf softether-vpnserver-v4.19-9582-beta-2015.10.06-linux-x86-32bit.tar.gz
 cd vpnserver/
 ./install.sh
 cd $tmpdir && rm -f softether-vpnserver-v4.19-9582-beta-2015.10.06-linux-x86-32bit.tar.gz
 echo "SoftEtherVPN-Server has been installed successfully..\n"
}

#安装SoftEtherVPN客户端
function vpn_client_install {
 echo "start install SoftEtherVPN-Client..\n"
 cd $tmpdir
 wget http://www.softether-download.com/files/softether/v4.19-9582-beta-2015.10.06-tree/Linux/SoftEther_VPN_Client/32bit_-_Intel_x86/softether-vpnclient-v4.19-9582-beta-2015.10.06-linux-x86-32bit.tar.gz
 tar -zxvf softether-vpnclient-v4.19-9582-beta-2015.10.06-linux-x86-32bit.tar.gz
 cd vpnclient/
 echo "SoftEtherVPN-Client has been installed successfully..\n"
}

#安装AnyConnect服务器端（Ocserv）
function anyconnect_install {
  cd $tmpdir
  echo "install depends:\n"
  yum -y install pam-devel readline-devel http-parser-devel unbound gmp-devel
  yum -y install tar gzip xz wget gcc make autoconf
  echo "wget anyconnect software:\n"
  wget ftp://ftp.gnu.org/gnu/nettle/nettle-2.7.1.tar.gz
  tar zxvf nettle-2.7.1.tar.gz 
  cd nettle-2.7.1/
  ./configure --prefix=/usr/local/nettle
  make && make install
  echo '/usr/local/nettle/lib64/' > /etc/ld.so.conf.d/nettle.conf
  ldconfig
  cd ..
  rm -rf nettle-2.7.1/

  echo "install gnutls3.3.9:\n"
  cd $tmpdir
  export NETTLE_CFLAGS="-I/usr/local/nettle/include/"
  export NETTLE_LIBS="-L/usr/local/nettle/lib64/ -lnettle"
  export HOGWEED_LIBS="-L/usr/local/nettle/lib64/ -lhogweed"
  export HOGWEED_CFLAGS="-I/usr/local/nettle/include"
  wget ftp://ftp.gnutls.org/gcrypt/gnutls/v3.3/gnutls-3.3.9.tar.xz
  tar xvf gnutls-3.3.9.tar.xz 
  cd gnutls-3.3.9/
  ./configure --prefix=/usr/local/gnutls
  make && make install
  ln -s /usr/local/gnutls/bin/certtool /usr/bin/certtool
  echo '/usr/local/gnutls/lib/' > /etc/ld.so.conf.d/gnutls.conf
  ldconfig

  echo "install libnl:\n"
  yum -y install bison flex
  wget http://www.carisma.slowglass.com/~tgr/libnl/files/libnl-3.2.24.tar.gz
  tar xvf libnl-3.2.24.tar.gz
  cd libnl-3.2.24
  ./configure --prefix=/usr/local/libnl
  make && make install
  echo '/usr/local/libnl/lib/' > /etc/ld.so.conf.d/libnl.conf
  ldconfig
}

#安装端口转发软件Socat
function socat_install {
 cd $tmpdir
 wget –no-cache http://www.convirture.com/repos/definitions/rhel/6.x/convirt.repo -O /etc/yum.repos.d/convirt.repo
 yum makecache
 yum -y install socat
}

#编译start-stop-daemon命令
function start_stop_daemon {
 cd $tmpdir
 wget http://developer.axis.com/download/distribution/apps-sys-utils-start-stop-daemon-IR1_9_18-2.tar.gz
 tar -zxvf apps-sys-utils-start-stop-daemon-IR1_9_18-2.tar.gz
 cd apps/sys-utils/start-stop-daemon-IR1_9_18-2/
 gcc start-stop-daemon.c -o start-stop-daemon
 chmod 777 start-stop-daemon
 cp start-stop-daemon /usr/local/sbin
}

#安装NGINX服务器（编译安装）
function nginx_install {
 cd $tmpdir
 yum -y install gcc-c++
 yum -y install zlib zlib-devel openssl openssl--devel pcre pcre-devel
 wget http://nginx.org/download/nginx-1.9.5.tar.gz
 tar -zxvf nginx-1.9.5.tar.gz
 cd nginx-1.9.5
 ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_flv_module --with-http_sub_module --with-http_realip_module --with-http_gzip_static_module --with-http_stub_status_module --with-ipv6 --with-http_v2_module
 make
 make install
 cd ..
 rm -rf nginx-1.9.5
}

#安装Apache服务器，并设置为开机启动
function apache_install {
  yum -y install httpd
  service httpd start
  chkconfig httpd on
  echo "apache has been installed successfully!\n"
}

#安装MySQL服务器，设置为开机启动，并设置root账户的密码
function mysql_install {
  yum -y install mysql mysql-server
  service mysqld start
  chkconfig mysqld on
  echo "next will set the root account password:\n"
  mysql_secure_installation
  service mysqld restart
  echo "mysql has been installed successfully!\n"
}

#安装PHP执行环境
function php_install {
  yum -y install php
  yum -y install php-mysql php-gd libjpeg* php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-bcmath php-mhash libmcrypt
  echo "php has been installed successfully!\n"
}

#安装LAMP（Linux+Apache+MySQL+PHP）执行环境
function lamp_install {
  apache_install
  mysql_install
  php_install
  service httpd restart
  service mysqld restart
  echo "lamp has been installed successfully!\n"
}

#安装Memcached
function memcached_install {
  yum -y install memcached
  echo "Memcached has been installed successfully! Config file is located at /etc/sysconfig/memcached.\n"
}

#安装Redis数据库
function redis_install {
  cd $tmpdir
  wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
  rpm -ivh epel-release-6-8.noarch.rpm
  yum -y install redis
  echo "Redis has been installed successfully!\n"
  echo "You can use \"service redis start\" to start the service..\n"
}

#安装RabbitMQ消息队列
function rabbitmq_install {
  cd $tmpdir
  yum -y install erlang
  wget https://www.rabbitmq.com/releases/rabbitmq-server/v3.5.6/rabbitmq-server-3.5.6-1.noarch.rpm
  rrpm --import https://www.rabbitmq.com/rabbitmq-signing-key-public.asc
  yum install rabbitmq-server-3.5.6-1.noarch.rpm
  echo "RabbitMQ has been installed successfully!\n"

  #启动RabbitMQ
  service rabbitmq-server start
  #开启Web管理Portal
  rabbitmq-plugins enable rabbitmq_management
  echo "RabbitMQ Management is enabled..\n\n"
  
  #设置管理密码
  echo "RabbitMQ Management Config:\n"
  read -p "username:" rabbitmqUser
  read -s -p "password" rabbitmqPasswd
  rabbitmqctl add_user $rabbitmqUser $rabbitmqPasswd
  rabbitmqctl set_user_tags $rabbitmqUser administrator
  rabbitmqctl set_permissions -p / $rabbitmqUser ".*" ".*" ".*"
  echo "now you can manage your RabbotMQ by visiting http://[ip_addr]:15672 with username[$rabbitmqUser] and password.\n"
  unset rabbitmqUser rabbitmqPasswd
}

#安装stunnel
#还没有加入function中！！！！！！
function stunnel_install{
  cd $tmpdir
  yum -y install gcc openssl openssl-devel
  wget https://www.stunnel.org/downloads/stunnel-5.26.tar.gz
  tar -zxvf stunnel-5.26.tar.gz
  cd stunnel-5.26
  ./configure
  make
  make install
  echo "stunnel has been installed successfully!\n"
  cd .. && rm -rf stunnel-5.26
  echo "stunnel source floder has been removed..\n"
  whereis stunnel

  #配置文件

  #开机脚本
}

function dnsmasq_install {
  yum -y install dnsmasq
}

PS3="Enter option:"
select option in "Install ShadowSocks Server" "Install SoftEtherVPN Server" "Install SoftEtherVPN Client" "Install AnyConnect Server" "Install Socat" "Install Start_Stop_Daemon" "Install Nginx Server" "Install LAMP Server Suite" "Install Apache Server" "Install MySQL Server" "Install PHP" "Install Memcached" "Install Redis" "Install Rabbitmq" "Exit"
do
        case $option in
        "Install ShadowSocks Server")
                ss_install;;
        "Install SoftEtherVPN Server")
                vpn_server_install;;
        "Install SoftEtherVPN Client")
                vpn_client_install;;
        "Install AnyConnect Server")
                anyconnect_install;;
        "Install Socat")
                socat_install;;
        "Install Start_Stop_Daemon")
                start_stop_daemon;;
        "Install Nginx Server")
                nginx_install;;
        "Install LAMP Server Suite")
                lamp_install;;
        "Install Apache Server")
                apache_install;;
        "Install MySQL Server")
                mysql_install;;
        "Install PHP")
                php_install;;
        "Install Memcached")
                memcached_install;;
        "Install Redis")
                redis_install;;
        "Install Rabbitmq")
                rabbitmq_install;;
        "Exit")
                break;;
        *)
                clear
                echo "wrong selection!";;
        esac
done
unset tmpdir
clear
exit 0